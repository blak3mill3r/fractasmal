// generated by Fast Light User Interface Designer (fluid) version 1.0108

#include "animator_ui.hpp"

void AnimatorUI::cb_slider_frame_i(Fl_Value_Slider* o, void*) {
  animator->set_frame((ulong)o->value());
}
void AnimatorUI::cb_slider_frame(Fl_Value_Slider* o, void* v) {
  ((AnimatorUI*)(o->parent()))->cb_slider_frame_i(o,v);
}

void AnimatorUI::cb_check_keyframe_i(Fl_Round_Button*, void*) {
  animator->keyframe_at();
}
void AnimatorUI::cb_check_keyframe(Fl_Round_Button* o, void* v) {
  ((AnimatorUI*)(o->parent()))->cb_check_keyframe_i(o,v);
}

void AnimatorUI::cb_button_last_keyframe_i(Fl_Button*, void*) {
  animator->go_to_last_kf();
}
void AnimatorUI::cb_button_last_keyframe(Fl_Button* o, void* v) {
  ((AnimatorUI*)(o->parent()))->cb_button_last_keyframe_i(o,v);
}

void AnimatorUI::cb_button_next_keyframe_i(Fl_Button*, void*) {
  animator->go_to_next_kf();
}
void AnimatorUI::cb_button_next_keyframe(Fl_Button* o, void* v) {
  ((AnimatorUI*)(o->parent()))->cb_button_next_keyframe_i(o,v);
}
AnimatorUI::AnimatorUI(int X, int Y, int W, int H, const char *L)
  : Fl_Group(0, 0, W, H, L) {
this->box(FL_FLAT_BOX);
this->color(FL_BACKGROUND_COLOR);
this->selection_color(FL_BACKGROUND_COLOR);
this->labeltype(FL_NO_LABEL);
this->labelfont(13);
this->labelsize(10);
this->labelcolor(FL_FOREGROUND_COLOR);
this->align(FL_ALIGN_TOP);
this->when(FL_WHEN_RELEASE);
{ slider_frame = new Fl_Value_Slider(36, 1, 764, 16, "frame");
  slider_frame->type(5);
  slider_frame->labelfont(13);
  slider_frame->labelsize(10);
  slider_frame->maximum(1200);
  slider_frame->step(1);
  slider_frame->textfont(13);
  slider_frame->callback((Fl_Callback*)cb_slider_frame);
  slider_frame->align(FL_ALIGN_LEFT);
} // Fl_Value_Slider* slider_frame
{ check_keyframe = new Fl_Round_Button(55, 21, 16, 20, "keyframe");
  check_keyframe->down_box(FL_ROUND_DOWN_BOX);
  check_keyframe->labelfont(13);
  check_keyframe->labelsize(10);
  check_keyframe->callback((Fl_Callback*)cb_check_keyframe);
  check_keyframe->align(FL_ALIGN_LEFT);
} // Fl_Round_Button* check_keyframe
{ button_last_keyframe = new Fl_Button(72, 20, 24, 24, "<");
  button_last_keyframe->tooltip("Last key frame");
  button_last_keyframe->labelfont(4);
  button_last_keyframe->labelsize(32);
  button_last_keyframe->callback((Fl_Callback*)cb_button_last_keyframe);
} // Fl_Button* button_last_keyframe
{ button_next_keyframe = new Fl_Button(100, 20, 24, 24, ">");
  button_next_keyframe->tooltip("Last key frame");
  button_next_keyframe->labelfont(4);
  button_next_keyframe->labelsize(32);
  button_next_keyframe->callback((Fl_Callback*)cb_button_next_keyframe);
} // Fl_Button* button_next_keyframe
position(X, Y);
end();
}

void AnimatorUI::set_animator(FractalAnimator *anim) {
  animator = anim;
}
